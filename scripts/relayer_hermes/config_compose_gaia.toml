# The global section has parameters that apply globally to the relayer operation.
[global]

# Specify the verbosity for the relayer logging output. Default: 'info'
# Valid options are 'error', 'warn', 'info', 'debug', 'trace'.
log_level = 'info'


# Specify the mode to be used by the relayer. [Required]
[mode]

# Specify the client mode.
[mode.clients]

# Whether or not to enable the client workers. [Required]
enabled = true

# Whether or not to enable periodic refresh of clients. [Default: true]
# This feature only applies to clients that underlie an open channel.
# For Tendermint clients, the frequency at which Hermes refreshes them is 2/3 of their
# trusting period (e.g., refresh every ~9 days if the trusting period is 14 days).
# Note: Even if this is disabled, clients will be refreshed automatically if
#      there is activity on a connection or channel they are involved with.
refresh = true

# Whether or not to enable misbehaviour detection for clients. [Default: false]
misbehaviour = false

# Specify the connections mode.
[mode.connections]

# Whether or not to enable the connection workers for handshake completion. [Required]
enabled = false

# Specify the channels mode.
[mode.channels]

# Whether or not to enable the channel workers for handshake completion. [Required]
enabled = false

# Specify the packets mode.
[mode.packets]

# Whether or not to enable the packet workers. [Required]
enabled = true

# Parametrize the periodic packet clearing feature.
# Interval (in number of blocks) at which pending packets
# should be periodically cleared. A value of '0' will disable
# periodic packet clearing. [Default: 100]
clear_interval = 100

# Whether or not to clear packets on start. [Default: false]
clear_on_start = true

# Toggle the transaction confirmation mechanism.
# The tx confirmation mechanism periodically queries the `/tx_search` RPC
# endpoint to check that previously-submitted transactions
# (to any chain in this config file) have been successfully delivered.
# If they have not been, and `clear_interval = 0`, then those packets are
# queued up for re-submission.
# If set to `false`, the following telemetry metrics will be disabled:
# `acknowledgment_packets_confirmed`, `receive_packets_confirmed` and `timeout_packets_confirmed`.
# [Default: false]
tx_confirmation = false

# The REST section defines parameters for Hermes' built-in RESTful API.
# https://hermes.informal.systems/rest.html
[rest]

# Whether or not to enable the REST service. Default: false
enabled = true

# Specify the IPv4/6 host over which the built-in HTTP server will serve the RESTful
# API requests. Default: 127.0.0.1
host = '127.0.0.1'

# Specify the port over which the built-in HTTP server will serve the restful API
# requests. Default: 3000
port = 4000


# The telemetry section defines parameters for Hermes' built-in telemetry capabilities.
# https://hermes.informal.systems/telemetry.html
[telemetry]

# Whether or not to enable the telemetry service. Default: false
enabled = false

# Specify the IPv4/6 host over which the built-in HTTP server will serve the metrics
# gathered by the telemetry service. Default: 127.0.0.1
host = '127.0.0.1'

# Specify the port over which the built-in HTTP server will serve the metrics gathered
# by the telemetry service. Default: 3001
port = 4001

#gaia
[[chains]]
id = 'gaiad-t1'
rpc_addr = 'http://localhost:3241'
grpc_addr = 'http://localhost:3242'
event_source = { mode = 'push', url = 'ws://localhost:3241/websocket', batch_delay = '500ms' }
rpc_timeout = '10s'
account_prefix = 'cosmos'
key_name = 'bob'
address_type = { derivation = 'cosmos' }
store_prefix = 'ibc'
max_gas = 10000000   
default_gas = 100000                                                                                       
max_msg_num = 10
gas_price = { price = 0.03, denom = 'stake' }
gas_multiplier = 2
clock_drift = '5s'
trusting_period = '2m'
trust_threshold = { numerator = '1', denominator = '3' }


[[chains]]
id = 'centaurid-t1'
rpc_addr = 'http://127.0.0.1:2241'
grpc_addr = 'http://127.0.0.1:2242'
event_source = { mode = 'push', url = 'ws://127.0.0.1:2241/websocket', batch_delay = '500ms' }
rpc_timeout = '10s'
account_prefix = 'centauri'
key_name = 'alice'
address_type = { derivation = 'cosmos' }
store_prefix = 'ibc'
default_gas = 100000
max_gas = 1000000
gas_price = { price = 0.03, denom = 'stake' }
gas_multiplier = 1.5
max_msg_num = 30
max_tx_size = 2097152
clock_drift = '5s'
max_block_time = '30s'
trusting_period = '1800s'
trust_threshold = { numerator = '1', denominator = '3' }
memo_prefix = ''

# [[chains]]
# id = 'harpoon-4'
# rpc_addr = 'https://kujira-testnet-rpc.polkachu.com:443'
# grpc_addr = 'http://3.143.254.222:29090'
# websocket_addr = 'ws://3.143.254.222:46657/websocket'
# rpc_timeout = '10s'
# account_prefix = 'kujira'
# key_name = 'alice'
# address_type = { derivation = 'cosmos' }
# store_prefix = 'ibc'
# default_gas = 100000
# max_gas = 400000
# gas_price = { price = 0.001, denom = 'ukuji' }
# gas_multiplier = 1.1
# max_msg_num = 30
# max_tx_size = 2097152
# clock_drift = '5s'
# max_block_time = '30s'
# trusting_period = '1800s'
# trust_threshold = { numerator = '1', denominator = '3' }
# memo_prefix = ''

# [[chains]]
# id = 'osmo-test-4'
# rpc_addr = 'https://rpc-test.osmosis.zone:443'
# grpc_addr = 'http://grpc-test.osmosis.zone:443'
# websocket_addr = 'ws://rpc-test.osmosis.zone:443/websocket'	
# rpc_timeout = '30s'
# account_prefix = 'osmo'
# key_name = 'osmosis'
# store_prefix = 'ibc'
# max_gas = 15000000                                                                                          
# max_msg_num = 10
# gas_price = { price = 0.0001, denom = 'uosmo' }
# gas_multiplier = 2
# clock_drift = '15s'
# trusting_period = '9days'
# trust_threshold = { numerator = '1', denominator = '3' }
# memo_prefix = 'Hacker'




